{"version":3,"sources":["app.js"],"names":["express","require","PrismaClient","app","prisma","use","json","post","req","res","body","username","password","Mobile","cardId","test","status","error","user","create","data","BigInt","listen","console","log"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACyBA,OAAO,CAAC,gBAAD,C;IAAxBC,Y,YAAAA,Y;;AACR,IAAMC,GAAG,GAAGH,OAAO,EAAnB;AACA,IAAMI,MAAM,GAAG,IAAIF,YAAJ,EAAf;AAEAC,GAAG,CAACE,GAAJ,CAAQL,OAAO,CAACM,IAAR,EAAR;AAEAH,GAAG,CAACI,IAAJ,CAAS,OAAT,EAAkB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBAC+BD,GAAG,CAACE,IADnC,EACRC,QADQ,aACRA,QADQ,EACEC,QADF,aACEA,QADF,EACYC,MADZ,aACYA,MADZ,EACoBC,MADpB,aACoBA,MADpB;;AAAA,cAGX,aAAaC,IAAb,CAAkBF,MAAlB,CAHW;AAAA;AAAA;AAAA;;AAAA,2CAIPJ,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqB;AAAEW,YAAAA,KAAK,EAAE;AAAT,WAArB,CAJO;;AAAA;AAAA,cAOX,aAAaF,IAAb,CAAkBD,MAAlB,CAPW;AAAA;AAAA;AAAA;;AAAA,2CAQPL,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqB;AAAEW,YAAAA,KAAK,EAAE;AAAT,WAArB,CARO;;AAAA;AAAA;AAAA;AAAA,0CAYKb,MAAM,CAACc,IAAP,CAAYC,MAAZ,CAAmB;AACpCC,YAAAA,IAAI,EAAE;AACJT,cAAAA,QAAQ,EAARA,QADI;AAEJC,cAAAA,QAAQ,EAARA,QAFI;AAGJC,cAAAA,MAAM,EAANA,MAHI;AAIJC,cAAAA,MAAM,EAAEO,MAAM,CAACP,MAAD;AAJV;AAD8B,WAAnB,CAZL;;AAAA;AAYRI,UAAAA,IAZQ;AAoBdT,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqBY,IAArB;AApBc;AAAA;;AAAA;AAAA;AAAA;AAsBdT,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqB;AAAEW,YAAAA,KAAK,EAAE;AAAT,WAArB;;AAtBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;AA0BAd,GAAG,CAACmB,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACD,CAFD","sourcesContent":["const express = require('express');\nconst { PrismaClient } = require('@prisma/client');\nconst app = express();\nconst prisma = new PrismaClient();\n\napp.use(express.json());\n\napp.post('/user', async (req, res) => {\n  const { username, password, Mobile, cardId } = req.body;\n\n  if (!/^\\d{1,10}$/.test(Mobile)) {\n    return res.status(400).json({ error: 'Mobile ต้องเป็นตัวเลขไม่เกิน 10 หลัก' });\n  }\n\n  if (!/^\\d{1,13}$/.test(cardId)) {\n    return res.status(400).json({ error: 'cardId ต้องเป็นตัวเลขไม่เกิน 13 หลัก' });\n  }\n\n  try {\n    const user = await prisma.user.create({\n      data: {\n        username,\n        password,\n        Mobile,\n        cardId: BigInt(cardId),\n      },\n    });\n    res.status(201).json(user);\n  } catch (err) {\n    res.status(500).json({ error: 'เกิดข้อผิดพลาด' });\n  }\n});\n\napp.listen(5555, () => {\n  console.log('✅ Server running at http://localhost:5555');\n});\n"],"file":"app.dev.js"}